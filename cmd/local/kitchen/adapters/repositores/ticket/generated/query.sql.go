// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package generated

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const insertTicket = `-- name: InsertTicket :one
INSERT INTO kitchen.ticket 
(uuid, customer_id, status, amount, currency_code, created_at, updated_at)
VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING id
`

type InsertTicketParams struct {
	Uuid         uuid.UUID
	CustomerID   uuid.UUID
	Status       string
	Amount       int64
	CurrencyCode string
	CreatedAt    pgtype.Timestamptz
	UpdatedAt    pgtype.Timestamptz
}

func (q *Queries) InsertTicket(ctx context.Context, arg InsertTicketParams) (int32, error) {
	row := q.db.QueryRow(ctx, insertTicket,
		arg.Uuid,
		arg.CustomerID,
		arg.Status,
		arg.Amount,
		arg.CurrencyCode,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const insertTicketItem = `-- name: InsertTicketItem :exec
INSERT INTO kitchen.ticket_items (uuid, quantity, unit_price, ticket_id)
VALUES ($1, $2, $3, $4)
`

type InsertTicketItemParams struct {
	Uuid      uuid.UUID
	Quantity  int32
	UnitPrice int64
	TicketID  int32
}

func (q *Queries) InsertTicketItem(ctx context.Context, arg InsertTicketItemParams) error {
	_, err := q.db.Exec(ctx, insertTicketItem,
		arg.Uuid,
		arg.Quantity,
		arg.UnitPrice,
		arg.TicketID,
	)
	return err
}
